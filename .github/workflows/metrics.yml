name: Metrics
on: [pull_request_target]
env:
  MAKEFLAGS: ${{ (github.repository == 'numworks/epsilon-internal') && '-j32' || '-j2' }}

jobs:
  binary-size:
    runs-on: ${{ (github.repository == 'numworks/epsilon-internal') && 'self-hosted' || 'ubuntu-latest'  }}
    steps:
      - name: Install ARM toolchain
        uses: numworks/setup-arm-toolchain@latest
      - name: Checkout PR base
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base
      - name: Build base for N0100
        run: make -C base MODEL=n0100 kernel.elf && make -C base MODEL=n0100 userland.elf
      - name: Build base for N0110
        run: make -C base kernel.A.elf && make -C base userland.A.elf
      - name: Checkout PR head
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: head
      - name: Build head for N0100
        run: make -C head MODEL=n0100 kernel.elf && make -C head MODEL=n0100 userland.elf
      - name: Build head for N0110
        run: make -C head kernel.A.elf && make -C head userland.A.elf
      - name: Retrieve binary size analysis
        id: binary_size
        run: echo "::set-output name=n0100kernel::$(python3 head/build/metrics/binary_size.py base/output/release/device/n0100/kernel/kernel.elf head/output/release/device/n0100/kernel/kernel.elf --labels Base Head --sections .text .rodata .bss .data --escape)" && echo "::set-output name=n0100userland::$(python3 head/build/metrics/binary_size.py base/output/release/device/n0100/userland/userland.elf head/output/release/device/n0100/userland/userland.elf --labels Base Head --sections .text .rodata .bss .data --escape)" && echo "::set-output name=n0110kernel::$(python3 head/build/metrics/binary_size.py base/output/release/device/n0110/kernel/kernel.A.elf head/output/release/device/n0110/kernel/kernel.A.elf --labels Base Head --sections .text .rodata .bss .data --escape)" && echo "::set-output name=n0110userland::$(python3 head/build/metrics/binary_size.py base/output/release/device/n0110/userland/userland.A.elf head/output/release/device/n0110/userland/userland.A.elf --labels Base Head --sections .text .rodata .bss .data --escape)"
      - name: Add comment for N100
        uses: actions/github-script@v3.0.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: `# Binary size for N0100 firmware\n### Kernel\n${{ steps.binary_size.outputs.n0100kernel }}\n### Userland\n${{ steps.binary_size.outputs.n0100userland }}`,
            });
      - name: Add comment for N110
        uses: actions/github-script@v3.0.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: `# Binary size for N0110 firmware\n### Kernel\n${{ steps.binary_size.outputs.n0110kernel }}\n### Userland\n${{ steps.binary_size.outputs.n0110userland }}`,
            });
