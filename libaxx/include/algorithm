#ifndef LIBAXX_ALGORITHM
#define LIBAXX_ALGORITHM

#include <utility>

namespace std {

template<class T>
inline constexpr const T & min(const T & a, const T & b ) {
  return (b < a) ? b : a;
}

template<class T>
inline constexpr const T & max(const T & a, const T & b ) {
  return (b > a) ? b : a;
}

template< class T >
void swap( T& a, T& b ) {
  T temp = std::move(a);
  a = std::move(b);
  b = std::move(temp);
}

}

#endif
